name: Debug Windows Deployment

on:
  push:
    branches: [ "main", "master" ]

jobs:
  deploy-to-windows:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug - Check environment
        run: |
          Write-Host "=== ENVIRONMENT DEBUG ==="
          Write-Host "Current directory: $PWD"
          Write-Host "Repository: ${{ github.repository }}"
          Write-Host "Actor: ${{ github.actor }}"
          Write-Host "SHA: ${{ github.sha }}"
          Write-Host ""
          
          Write-Host "=== FILES IN REPOSITORY ==="
          Get-ChildItem -Force | Format-Table Name, Length, LastWriteTime
          Write-Host ""
          
          Write-Host "=== CHECKING DEPLOY.BAT ==="
          if (Test-Path "deploy.bat") {
              Write-Host "‚úì deploy.bat fayli topildi"
              Write-Host "Fayl hajmi: $((Get-Item 'deploy.bat').Length) bytes"
              Write-Host "Fayl mazmuni (birinchi 10 qator):"
              Get-Content "deploy.bat" -TotalCount 10
          } else {
              Write-Host "‚úó deploy.bat fayli topilmadi!"
          }
          Write-Host ""
          
          Write-Host "=== SECRETS CHECK ==="
          $botToken = "${{ secrets.TELEGRAM_BOT_TOKEN }}"
          if ($botToken -and $botToken.Length -gt 10) {
              Write-Host "‚úì TELEGRAM_BOT_TOKEN mavjud (uzunligi: $($botToken.Length))"
          } else {
              Write-Host "‚úó TELEGRAM_BOT_TOKEN mavjud emas yoki juda qisqa"
          }
        shell: powershell
        continue-on-error: true

      - name: Test Telegram connection
        run: |
          Write-Host "=== TELEGRAM CONNECTION TEST ==="
          try {
              $botToken = "${{ secrets.TELEGRAM_BOT_TOKEN }}"
              if (-not $botToken) {
                  Write-Host "‚úó Bot token mavjud emas!"
                  exit 1
              }
          
              $telegramUrl = "https://api.telegram.org/bot$botToken"
              Write-Host "Telegram bot ma'lumotlarini olish..."
          
              $botInfo = Invoke-RestMethod -Uri "$telegramUrl/getMe" -Method Get -TimeoutSec 10
          
              if ($botInfo.ok) {
                  Write-Host "‚úì Bot ulanishi muvaffaqiyatli!"
                  Write-Host "Bot nomi: $($botInfo.result.first_name)"
                  Write-Host "Bot username: @$($botInfo.result.username)"
              } else {
                  Write-Host "‚úó Bot ma'lumotlarini olishda xatolik!"
              }
          
              Write-Host ""
              Write-Host "Bot updates tekshirilmoqda..."
              $updates = Invoke-RestMethod -Uri "$telegramUrl/getUpdates" -Method Get -TimeoutSec 10
          
              if ($updates.ok) {
                  Write-Host "‚úì Updates muvaffaqiyatli olindi"
                  Write-Host "Jami updates: $($updates.result.Count)"
          
                  if ($updates.result.Count -gt 0) {
                      $uniqueChats = @()
                      foreach ($update in $updates.result) {
                          if ($update.message -and $update.message.chat.id) {
                              $chatId = $update.message.chat.id
                              if ($uniqueChats -notcontains $chatId) {
                                  $uniqueChats += $chatId
                              }
                          }
                      }
                      Write-Host "Unique chat ID lar soni: $($uniqueChats.Count)"
                      Write-Host "Chat ID lar: $($uniqueChats -join ', ')"
                  } else {
                      Write-Host "‚ö†Ô∏è Hech qanday chat topilmadi. Botga /start yuboring!"
                  }
              } else {
                  Write-Host "‚úó Updates olishda xatolik!"
              }
          }
          catch {
              Write-Host "‚úó Telegram ulanish xatoligi:"
              Write-Host "Xatolik: $($_.Exception.Message)"
              Write-Host "Status code: $($_.Exception.Response.StatusCode)"
          }
        shell: powershell
        continue-on-error: true

      - name: Test deploy.bat execution
        run: |
          Write-Host "=== DEPLOY.BAT TEST ==="
          if (Test-Path "deploy.bat") {
              Write-Host "deploy.bat faylini ishga tushirish..."
              try {
                  $output = cmd /c "deploy.bat" 2>&1
                  $exitCode = $LASTEXITCODE
          
                  Write-Host "Exit code: $exitCode"
                  Write-Host "Output:"
                  Write-Host "----------------------------------------"
                  Write-Host $output
                  Write-Host "----------------------------------------"
          
                  if ($exitCode -eq 0) {
                      Write-Host "‚úì deploy.bat muvaffaqiyatli bajarildi"
                  } else {
                      Write-Host "‚úó deploy.bat xatolik bilan tugadi (exit code: $exitCode)"
                  }
              }
              catch {
                  Write-Host "‚úó deploy.bat ishga tushirishda xatolik:"
                  Write-Host $_.Exception.Message
              }
          } else {
              Write-Host "‚úó deploy.bat fayli mavjud emas!"
          }
        shell: powershell
        continue-on-error: true

      - name: Send test notification
        run: |
          Write-Host "=== TEST NOTIFICATION ==="
          try {
              $botToken = "${{ secrets.TELEGRAM_BOT_TOKEN }}"
              if (-not $botToken) {
                  Write-Host "‚úó Bot token mavjud emas!"
                  exit 1
              }
          
              $telegramUrl = "https://api.telegram.org/bot$botToken"
              $updates = Invoke-RestMethod -Uri "$telegramUrl/getUpdates" -Method Get
          
              $chatIds = @()
              foreach ($update in $updates.result) {
                  if ($update.message -and $update.message.chat.id) {
                      $chatId = $update.message.chat.id
                      if ($chatIds -notcontains $chatId) {
                          $chatIds += $chatId
                      }
                  }
              }
          
              if ($chatIds.Count -eq 0) {
                  Write-Host "‚ö†Ô∏è Hech qanday chat ID topilmadi!"
                  Write-Host "Botga Telegram'da /start yuboring!"
                  exit 0
              }
          
              $message = "üß™ *Test xabari*`n`n‚úÖ GitHub Actions ishlayapti!`nüîß Repository: ${{ github.repository }}`n‚è∞ Vaqt: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')"
          
              $successCount = 0
              $errorCount = 0
          
              foreach ($chatId in $chatIds) {
                  try {
                      $body = @{
                          chat_id = $chatId
                          text = $message
                          parse_mode = "Markdown"
                      } | ConvertTo-Json
          
                      $response = Invoke-RestMethod -Uri "$telegramUrl/sendMessage" -Method Post -Body $body -ContentType "application/json"
          
                      if ($response.ok) {
                          Write-Host "‚úì Test xabari yuborildi: $chatId"
                          $successCount++
                      }
                  }
                  catch {
                      Write-Host "‚úó Xatolik: $chatId - $($_.Exception.Message)"
                      $errorCount++
                  }
              }
          
              Write-Host ""
              Write-Host "Natija:"
              Write-Host "- Muvaffaqiyatli: $successCount"
              Write-Host "- Xatolik: $errorCount"
              Write-Host "- Jami: $($chatIds.Count)"
          }
          catch {
              Write-Host "‚úó Test notification xatoligi:"
              Write-Host $_.Exception.Message
          }
        shell: powershell
        continue-on-error: true