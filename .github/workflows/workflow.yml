name: Send Message Test

on: [push]

jobs:
  send-test:
    runs-on: self-hosted
    
    steps:
    - name: Get chat IDs and send message
      shell: powershell
      run: |
        try {
            $token = "${{ secrets.TELEGRAM_BOT_TOKEN }}"
            $baseUrl = "https://api.telegram.org/bot$token"
            
            Write-Host "🔍 Getting updates..."
            $updates = Invoke-RestMethod -Uri "$baseUrl/getUpdates" -Method Get
            
            Write-Host "📊 Total updates: $($updates.result.Count)"
            
            # Chat ID'larni yig'ish
            $chatIds = @()
            foreach ($update in $updates.result) {
                if ($update.message -and $update.message.chat.id) {
                    $chatId = $update.message.chat.id
                    if ($chatIds -notcontains $chatId) {
                        $chatIds += $chatId
                        Write-Host "👤 Found chat ID: $chatId"
                    }
                }
            }
            
            Write-Host "💬 Unique chats: $($chatIds.Count)"
            
            if ($chatIds.Count -eq 0) {
                Write-Host "⚠️ No chats found. Send /start to your bot first!"
                exit 0
            }
            
            # Oddiy xabar yuborish
            $message = "🚀 Test message from GitHub Actions!`n`nRepository: ${{ github.repository }}`nTime: $(Get-Date)"
            
            foreach ($chatId in $chatIds) {
                Write-Host "📤 Sending to chat: $chatId"
                
                $body = @{
                    chat_id = $chatId
                    text = $message
                } | ConvertTo-Json
                
                $response = Invoke-RestMethod -Uri "$baseUrl/sendMessage" -Method Post -Body $body -ContentType "application/json"
                
                if ($response.ok) {
                    Write-Host "✅ Message sent successfully to $chatId"
                } else {
                    Write-Host "❌ Failed to send to $chatId"
                }
            }
            
            Write-Host "🎉 Test completed!"
        }
        catch {
            Write-Host "💥 Error: $($_.Exception.Message)"
            Write-Host "📍 Line: $($_.InvocationInfo.ScriptLineNumber)"
            exit 1
        }
