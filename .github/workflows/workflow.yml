name: Broadcast to All Users

on:
  push:
    branches: [ "main", "master" ]

jobs:
  broadcast:
    runs-on: self-hosted
    
    steps:
    - name: Send to all bot subscribers
      shell: powershell
      run: |
        try {
            $botToken = "${{ secrets.TELEGRAM_BOT_TOKEN }}"
            $baseUrl = "https://api.telegram.org/bot$botToken"
            
            Write-Host "🔍 Getting all bot subscribers..."
            
            # Bot updates orqali barcha chat ID'larni olish
            $updates = Invoke-RestMethod -Uri "$baseUrl/getUpdates" -Method Get
            
            Write-Host "📊 Total updates found: $($updates.result.Count)"
            
            # Unique chat ID'larni yig'ish
            $chatIds = @()
            foreach ($update in $updates.result) {
                if ($update.message -and $update.message.chat.id) {
                    $chatId = $update.message.chat.id
                    if ($chatIds -notcontains $chatId) {
                        $chatIds += $chatId
                        $firstName = $update.message.from.first_name
                        Write-Host "👤 Found user: $firstName (ID: $chatId)"
                    }
                }
            }
            
            Write-Host "📢 Broadcasting to $($chatIds.Count) users..."
            
            if ($chatIds.Count -eq 0) {
                Write-Host "⚠️ No subscribers found. Users need to send /start to the bot first!"
                exit 0
            }
            
            # Xabar tayyorlash
            $message = "🚀 GitHub Push Notification`n`n" +
                      "📁 Repository: ${{ github.repository }}`n" +
                      "🔧 Commit: ${{ github.sha }}`n" +
                      "👤 Author: ${{ github.actor }}`n" +
                      "⏰ Time: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')`n`n" +
                      "✅ Push completed successfully!"
            
            # Har bir foydalanuvchiga yuborish
            $successCount = 0
            $errorCount = 0
            
            foreach ($chatId in $chatIds) {
                try {
                    $body = "chat_id=$chatId&text=$([System.Web.HttpUtility]::UrlEncode($message))"
                    
                    $response = Invoke-RestMethod -Uri "$baseUrl/sendMessage" -Method Post -Body $body -ContentType "application/x-www-form-urlencoded"
                    
                    if ($response.ok) {
                        Write-Host "✅ Message sent to $chatId"
                        $successCount++
                    } else {
                        Write-Host "❌ Failed to send to $chatId"
                        $errorCount++
                    }
                }
                catch {
                    Write-Host "❌ Error sending to $chatId`: $($_.Exception.Message)"
                    $errorCount++
                }
                
                # API rate limit uchun pauza
                Start-Sleep -Milliseconds 200
            }
            
            Write-Host ""
            Write-Host "📊 Broadcast Results:"
            Write-Host "   ✅ Successful: $successCount"
            Write-Host "   ❌ Failed: $errorCount"
            Write-Host "   📱 Total users: $($chatIds.Count)"
            
            if ($successCount -gt 0) {
                Write-Host "🎉 Broadcast completed successfully!"
            } else {
                Write-Host "😞 No messages were sent."
                exit 1
            }
        }
        catch {
            Write-Host "💥 General error: $($_.Exception.Message)"
            exit 1
        }
