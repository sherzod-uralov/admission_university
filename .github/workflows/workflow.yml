name: Direct Project Deployment

on:
  push:
    branches: [ "main", "master" ]

jobs:
  deploy:
    runs-on: self-hosted
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Send start notification
      shell: cmd
      run: |
        curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" -d "chat_id=6135147194" -d "text=üöÄ DEPLOYMENT STARTED%%0ARepository: ${{ github.repository }}%%0AAuthor: ${{ github.actor }}%%0ATime: %date% %time%"
        
    - name: Copy to main project and deploy
      shell: cmd
      run: |
        echo ===== DEPLOYMENT BOSHLANDI =====
        set PROJECT_DIR=C:\Users\sherz\WebstormProjects\admission_university
        set RUNNER_DIR=%CD%
        
        echo Runner folder: %RUNNER_DIR%
        echo Project folder: %PROJECT_DIR%
        
        REM 1. Yangi kodlarni asosiy papkaga ko'chirish
        echo.
        echo [1/5] Yangi kodlarni ko'chirish...
        REM Exclude file yaratish
        echo node_modules\ > "%TEMP%\deploy_exclude.txt"
        echo .next\ >> "%TEMP%\deploy_exclude.txt"
        echo .git\ >> "%TEMP%\deploy_exclude.txt"
        echo package-lock.json >> "%TEMP%\deploy_exclude.txt"
        
        xcopy /E /Y /I "%RUNNER_DIR%\*" "%PROJECT_DIR%\" /EXCLUDE:%TEMP%\deploy_exclude.txt
        
        REM 2. Asosiy papkaga o'tish
        cd /d "%PROJECT_DIR%"
        echo Hozirgi papka: %CD%
        
        REM 3. Tozalash
        echo.
        echo [2/5] Eski fayllarni tozalash...
        if exist "node_modules" rmdir /s /q node_modules
        if exist ".next" rmdir /s /q .next
        if exist "package-lock.json" del /f /q package-lock.json
        
        REM 4. npm install
        echo.
        echo [3/5] Dependencies o'rnatish...
        call npm cache clean --force
        call npm install --force
        
        REM 5. Build
        echo.
        echo [4/5] Production build...
        call npm run build
        
        REM 6. Server
        echo.
        echo [5/5] Server ishga tushirish...
        REM Eski server to'xtatish
        for /f "tokens=5" %%a in ('netstat -aon ^| findstr ":3777" ^| findstr "LISTENING"') do (
          taskkill /f /pid %%a >nul 2>&1
        )
        
        REM Yangi server
        start /b cmd /c "npm run start"
        
        echo.
        echo ===== DEPLOYMENT TUGADI =====
        echo Loyiha: %PROJECT_DIR%
        echo Server: http://localhost:3777
        
    - name: Send success notification
      if: success()
      shell: cmd
      run: |
        curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" -d "chat_id=6135147194" -d "text=‚úÖ DEPLOYMENT SUCCESS%%0ARepository: ${{ github.repository }}%%0AAuthor: ${{ github.actor }}%%0A%%0ABarcha qadamlar muvaffaqiyatli tugadi!%%0AServer: http://localhost:3777%%0ATime: %date% %time%"
        
    - name: Send failure notification
      if: failure()
      shell: cmd
      run: |
        curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" -d "chat_id=6135147194" -d "text=‚ùå DEPLOYMENT FAILED%%0ARepository: ${{ github.repository }}%%0AAuthor: ${{ github.actor }}%%0ATime: %date% %time%"
